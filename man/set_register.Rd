% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_register.R, R/spy.R
\name{set_register}
\alias{set_register}
\alias{set_static_register}
\alias{get_register}
\alias{ring_register}
\alias{set_focus}
\alias{set_focus_highlighted}
\alias{set_focus_window}
\alias{spy}
\alias{spy_focus}
\alias{spy_highlighted}
\title{Registers}
\usage{
set_register(
  x,
  key,
  override = get_registers_option("override"),
  envir = parent.frame()
)

set_static_register(x, key, override = get_registers_option("override"))

get_register(key)

ring_register(key)

set_focus(x)

set_focus_highlighted()

set_focus_window()

spy(data, name = deparse(substitute(data)))

spy_focus()

spy_highlighted()
}
\arguments{
\item{data}{A dataset (or expression that returns one)}

\item{name}{The binding name to focus on, as a string}
}
\value{
Invisible \code{NULL}

Invisible \code{NULL}
}
\description{
Set registers and register actions

Spy
}
\details{
In Vim-speak, \code{focus} is the unnamed register.
}
\examples{

# registers has a built in generic (function) called spy() that
# helps summarize objects succintly. it's a lot like dplyr::glimpse()
spy(cars)


# a register is a kind of placeholder for a chunk of R code, usually
# a chunk of R code that you like to run a lot.
# right now, you don't have any registers set
registers()


# you set registers with set_register()
set_register(spy(cars), "f")
registers()


# ring_register() evaluates the chunk of code you've registered on demand
ring_register("f")


# there's an addin to ring_register().
# in RStudio, go to Tools > Modify Keyboard Shortcuts...
# in the box type "ring", and change the shortcut of Ring register
# to Cmd-R and click Apply. now push Cmd-R, type "f", and enter.


# with this you can compose registers
set_register(cars, "d")
set_register(spy(), "g")
registers()
ring_register("dg")
print_head <- function(.) print(tibble::as_tibble(.))
set_register(print_head(), "h")
ring_register("dh")


# registers are functions desirable for their side effects, their
# values are invisibly returned to nowhere

# "f" is the focus register. you can assign to the focus register
# more quickly with
set_focus(spy(airquality))
registers()

# it's commonly the case that you're manipulating a single dataset
# and want to check in on it each time you touch it. this is where
# the focus action comes in. the focus action is a register like any
# other with one key difference: it's bindable without a popup window.
set_focus_action(spy(data))

# in RStudio, go to Tools > Modify Keyboard Shortcuts...
# next to Set focus - highlighted, use Alt-Shift-Cmd-F
# next to Set focus - window, use Alt-F
# next to Glimpse focus, use Shift-Cmd-G

# press Shift-Cmd-G

airquality
# highlight airquality above and push Alt-Shift-Cmd-F
# press Shift-Cmd-G

# in Tools > Modify Keyboard Shortcuts...,
# set Glimpse highlighted to Alt-Shift-H, then highlight the line below and
# press Shift-Cmd-H
subset(cars, speed > 10)


# interesting use case: generate a random subsample (that has a desired property)
# and save it. highlight the whole next line and Shift-Cmd-H
(cars_sample <- cars[sample(nrow(cars), 5),])
cars_sample





spy(cars)

}
